
command_timeout = 1000

"$schema" = 'https://starship.rs/config-schema.json'

add_newline = false 

format = """
 ➜\
$directory\
${custom.giturl}\
$git_branch\
$git_state\
$git_status\
$line_break\
$character
"""

right_format = """$all"""

palette = "tokyonight"

[palettes.tokyonight]
rosewater = "#f7768e"   # 强调色/红色系
flamingo = "#ff9e64"    # 橙色系
pink = "#bb9af7"        # 紫色系
mauve = "#9d7cd8"       # 柔和紫色
red = "#f7768e"         # 错误/警示色
maroon = "#e0af68"      # 琥珀色
peach = "#e0af68"       # 琥珀色（与 maroon 相同）
yellow = "#e0af68"      # 警告色
green = "#9ece6a"       # 成功/完成色
teal = "#73daca"        # 青绿色
sky = "#7dcfff"         # 链接/高亮
sapphire = "#7aa2f7"    # 标准蓝色
blue = "#7aa2f7"        # 主蓝色
lavender = "#a9b1d6"    # 文本主色
text = "#c0caf5"        # 主要文本
subtext1 = "#a9b1d6"    # 次要文本
subtext0 = "#9aa5ce"    # 三级文本
overlay2 = "#565f89"    # 非活动元素
overlay1 = "#414868"    # 界面元素
overlay0 = "#3b4261"    # 界面背景
surface2 = "#292e42"    # 深色界面
surface1 = "#24283b"    # 背景层次
surface0 = "#1a1b26"    # 主背景
base = "#1a1b26"        # 基础背景
mantle = "#16161e"      # 浮动面板背景
crust = "#13141c"       # 最深背景层

[os]
format = '$symbol'
disabled = true

[os.symbols]
Alpine = ' '
Amazon = ' '
Android = ' '
Arch = ' '
CentOS = ' '
Debian = ' '
EndeavourOS = ' '
Fedora = ' '
FreeBSD = ' '
Garuda = ' '
Gentoo = ' '
Linux = ' '
Macos = ' '
Manjaro = ' '
Mariner = ' '
Mint = ' '
NetBSD = ' '
NixOS = ' '
OpenBSD = ' '
OpenCloudOS = ' '
openEuler = ' '
openSUSE = ' '
OracleLinux = '⊂⊃'
Pop = ' '
Raspbian = ' '
Redhat = ' '
RedHatEnterprise = ' '
Solus = ' '
SUSE = ' '
Ubuntu = ' '
Unknown = ' '
Windows = ' '

[username]
#show_always = true
#style_user = "bg:surface0 fg:text"
#style_root = "bg:surface0 fg:text"
#format = '[ $user ]($style)'

[directory]
style = "sapphire"
format = "[ $path ]($style)"

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = "󰝚 "
"Pictures" = " "
"Developer" = "󰲋 "


[custom.giturl]
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL="󰊢 "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL "
"""
shell = ["bash", "--noprofile", "--norc"]
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
format = "at $output"

[git_branch]
symbol = "[](black) "
style = "fg:lavender bg:black"
format =  '  on [$symbol$branch]($style)[](black)'

[git_status]
format = ' [($all_status$ahead_behind )]($style)'

[nodejs]
symbol = ""
format = '[ $symbol( $version) ]($style)'

[c]
symbol = " "
format = '[ $symbol( $version) ]($style)'

[rust]
symbol = ""
format = '[ $symbol( $version) ]($style)'

[golang]
symbol = ""
format = '[ $symbol( $version) ]($style)'
detect_files = ["go.mod"]

[php]
symbol = ""
format = '[ $symbol( $version) ]($style)'

[java]
symbol = " "
format = '[ $symbol( $version) ]($style)'

[kotlin]
symbol = ""
format = '[ $symbol( $version) ]($style)'

[haskell]
symbol = ""
format = '[ $symbol( $version) ]($style)'

[python]
symbol = ""
format = '[ $symbol( $version) ]($style)'


[docker_context]
symbol = ""
format = '[ $symbol( $context) ]($style)'


[time]
disabled = true
time_format = "%R"
style = "bg:peach"
format = '[[  $time ](fg:mantle bg:foam)]($style)'

[line_break]
disabled = true 

[character]
disabled = false
success_symbol = '[𝘹](bold fg:green)'
error_symbol = '[𝘹](bold fg:red)'
vimcmd_symbol = '[](bold fg:creen)'
vimcmd_replace_one_symbol = '[](bold fg:purple)'
vimcmd_replace_symbol = '[](bold fg:purple)'
vimcmd_visual_symbol = '[](bold fg:lavender)'
